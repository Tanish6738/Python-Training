Python Docs on Python.org documentations.

difference btw the 32 and 64 bits

why the python come ?

what is variable .

Why hertz not meter per second ? 

memory in 2d is like and excel sheet.
    
    Address ,value and variable

    like linkedList.

We Store the data in the Cell and the reference in the variable


PEP 8 is the Python guide for the Style  =  https://pep8.org/


NameSpace - is a dictionary where the All the Data types are mapped in the Python

Operators Arithmetic , Logical , Assignmenet , Bitwise = (PIPE, AMPERCENT, TILDE , CRAT)


DATA TYPE - list , tuple , string , (Range - generator and iterators of list) . 

colon significe the scope of if ,else, elif ,while for anything is started

String :

    By default the syntax and format of string is single quote.

WE cannot perform the concatination in the sets because of undefined memory allocations

we have the continous memory allocation so we can use the loop on the sequential things which is either 

    we can read it using the index and elements directly 

    why we use the commas in range because range() is a function.

    """s_str = "Hello"

    ans = "r"
    var = ans + s_str[1:] Deep Copy
    print(ans + s_str[1:])""" Shallow Copy

    difference btw the Shallow Copy and deep copy like  in the shallow copy the variable is terminated after the complete execution of the program but the in the deep copy the new values will be stored in the program after the program ends


    Range used as generator and iterators.


JO bhi class ke ander honge wo methods

Functions : 

Types : built in , User Defined , anynomus / Lamda , Higer Order

    built in function are the functions which are defined inside the default module of the python itself and they are the native to the python and present inside in the 

    https://docs.python.org/3/library/functions.html

    """import builtins

    print(dir(builtins))"""


    User Defined : Are the functions which are the defined by the users for their easy of work

        parameters : default def func(a = 10)

                    KeyWords func(a = 20 )
                    Multivalue : def func(*a):
                                    print(type(a)) # print : Tuple Because of reference passing
                                            
                                func(1,2,3,4)
                    KeyWords Multivalue : 
                                def func(**b):
                                    print(type(b)) # print : dictionary Because of reference passing
                                            
                                func(1,2,3,4)

        Lambda = var = Lambda <parameters> : Code Block

        

OOPS 
    - class
    - Object
    

    - Abstraction
    - Encapsulation
    - PolyMorphism
    - Inheritence
    
their is not logic of Constructor

Magic and  Dunder Methods in the Python

here the in __init__(self) self reperesent the current instance of the Object

obj = class1() here the obj is referenced as self


Because of NameSpace We Cannot use the Method Overloading . Because the Same function is not assign in the same dictionary of NameSpace


Key insights

We use the Lambda function to optimize the code 

Generator : A function which use yield to provide one output at a time and then when requested



yeild : 
def func(a):
    i = 0
    while i <=a:
        yield i
        i += 1
    
for i in func(5):
    print(i)

    Yield Ek list ki thraah work karta hai to jo ki values to store karta hai jo baad me use ho sakti hai


DEcorators in python :
def Dec (func):
    def wrapper(*args,**Kwargs):
        print("something")
        var = func(*args,**Kwargs)
        return var 
    return func

@Dec
def funtoins():
    return 5 + 6 




File handling 

Access Modifiers :
    r , w , a , r+ , w+ , a+
    rb , wb , ab , rb+ , wb+ , ab+, x 


    WE use the function instead of class because we have to extend the functionality of the existing file to the new file

    var = open("<File Path>", "Access Modifier")
    var.close()

    with open("<File Path>", "Access Modifier") as var:
        # do something with var
        pass


Execption handling

try:
    # code that may raise an exception

    try has a fallback mechanism to handle exceptions gracefully

    pass
except ExceptionType as e:
    # handle the exception
    print(f"An error occurred: {e}")
finally:
    # code that runs no matter what
    pass
raise ExceptionType("Error message")


Assert <condition> not in python .

Package managers in Python 
    - pip
    - UV


gitignore is a special file that tells Git which files or directories to ignore in a project. It helps keep the repository clean by excluding files that are not necessary for version control, such as temporary files, logs, or environment-specific configurations.


Automatic conversion of code to database code is migration so web don't have to write the code again and again for the database.


Loop back Address is the address that is used to test the network interface of a computer. It is typically represented by the IP address 127.0.0.1, which is also known as the "localhost" address. When you send data to this address, it is looped back to the same machine, allowing you to test network applications without needing an external network connection.

local 
global
loop back


applications are basic functional components of a website or web application that are designed to perform specific tasks or functions. They can include features like user authentication, data processing, and content management. Applications are often built using programming languages and frameworks that allow developers to create dynamic and interactive web experiences.

Every schema will provide a state of a project. 

a change in the schema will not affect the whole database until their is a relation btw the schema and the database.

areas verbosname 

httpresponse is request dependent and it doesn't have the datatype so we can use any type of data to respond..



steps to create a Django project with commands:
1. Virtual Environment : - 
python -m venv myenv
source myenv/bin/activate  # On Windows use: myenv\Scripts\activate
2. Install Django:
pip install django
3. Create a Django project:
django-admin startproject myproject
4. Navigate to the project directory:
cd myproject
Note : Now we have the access to the Manage.py and it's the main file to run the Django project
5. Create a Django app:
python manage.py startapp myapp
6. we create a urls.py file in the app directory to define the URL patterns for the app.
7. we configure the urls.py 
8. we will move to our request handleer file (views.py) and define the views that will handle the requests.
9. By default , we have the render function to render the HTML templates.but we use the HttpResponse to return the response.
10. At level zero we have to create a request handler for every url. 





the url will tell 



database migrations queries 


python manage.py makemigrations
python manage.py migrate


csrf = cross site request forgery is a type of attack that tricks the user into executing unwanted actions on a different website where they are authenticated. Django provides built-in protection against CSRF attacks by requiring a CSRF token in forms and AJAX requests.